map $http_x_forwarded_for $real_ip {
    ~^([^,\s]+) $1;
    default $remote_addr;
}

# Set up an IP whitelist for maintenance mode
geo $real_ip $maintenance_mode {
    default 1;
    163.53.146.87 0;
}

# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name sdg.unswzoo.com 149.28.177.238;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
    
    # Maintenance mode check
    if ($maintenance_mode = 1) {
        return 503;
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }

    # Maintenance mode handling
    error_page 503 @maintenance;
    location @maintenance {
        root /usr/share/nginx/html;
        try_files /maintenance.html /maintenance.html;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name sdg.unswzoo.com 149.28.177.238;

    # Security headers
    charset utf-8;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/sdg.unswzoo.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sdg.unswzoo.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sdg.unswzoo.com/chain.pem;
    
    # SSL settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    root /usr/share/nginx/html;
    index index.html;

    # Maintenance mode check
    if ($maintenance_mode = 1) {
        return 503;
    }

    # Handling the routes of React Router
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API proxy to the backend
    location /api/ {
        client_max_body_size 50M;
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    # Handle media files
    location /media/ {
        proxy_pass http://backend:8000/media/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    # WebSocket Proxy (Important!)
    location /ws/ {
        proxy_pass http://backend:8000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_read_timeout 86400;
    }

    # Static file caching
    location ~* ^/(?!media/).*\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Maintenance mode handling
    error_page 503 @maintenance;
    location @maintenance {
        root /usr/share/nginx/html;
        try_files /maintenance.html /maintenance.html;
    }
}